# reasons you might want to use `environment.yaml` instead of `requirements.txt`:
# - pip installs packages in a loop, without ensuring dependencies across all packages
#   are fulfilled simultaneously, but conda achieves proper dependency control across
#   all packages
# - conda allows for installing packages without requiring certain compilers or
#   libraries to be available in the system, since it installs precompiled binaries

name: env_ablm4eng

channels:
  - pytorch
  - conda-forge
  - defaults
  - anaconda
  - pypi

# it is strongly recommended to specify versions of packages installed through conda
# to avoid situation when version-unspecified packages install their latest major
# versions which can sometimes break things

# current approach below keeps the dependencies in the same major versions across all
# users, but allows for different minor and patch versions of packages where backwards
# compatibility is usually guaranteed

dependencies:
  - python=3.9
  - biopython=1.*
  - boto3=1.26
  - filelock=3.10
  - matplotlib
  - numpy=1.*
  - pandas=2.*
  - ninja
  - python-lmdb
  - future
  - scikit-learn=1.*
  - scipy=1.*
  - seaborn
  - filelock
  - tensorboardx
  - requests
  - pytorch=1.12

  # --------- loggers --------- #
  - wandb
  # - neptune-client
  # - mlflow
  # - comet-ml
  # - aim>=3.16.2 # no lower than 3.16.2, see https://github.com/aimhubio/aim/issues/2550

  - pip>=23